% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/summary_wind.R
\name{summary_wind}
\alias{summary_wind}
\title{Summarise z values over binned wind data.}
\usage{
summary_wind(data, ws, wd, z, groups = c(), fun = "mean",
  fun.args = list(), nmin = 3, wd_cutfun = cut_wd.fun(binwidth = 45),
  ws_cutfun = cut_ws.fun(binwidth = 1))
}
\arguments{
\item{data}{a data.frame or tibble containing the data (wide format)}

\item{ws}{symbol giving the wind velocity parameter name (wind velocity preferably in m/s)}

\item{wd}{symbol giving the wind direction parameter name  in degrees}

\item{z}{symbol giving the parameter name to be summarised}

\item{groups}{one or more character string for additional grouping}

\item{fun}{function or list of functions for summary.}

\item{fun.args}{a list of extra arguments passed on to fun.}

\item{nmin}{numeric, minimum number of values for fun, if n < nmin: NA is returned}

\item{wd_cutfun}{function, cut function for wind direction (to create bins). See \code{\link[=wd_cut.fun]{wd_cut.fun()}} for options.}

\item{ws_cutfun}{function, cut function for wind speed. See \code{\link[=ws_cut.fun]{ws_cut.fun()}} for examples}
}
\value{
a tibble with summarised data
}
\description{
Input data should be original unbinned data.
1-dimensional binning and calculating summary statistics over wind direction and/or wind velocity bins, respectively.
NA values in z will be silently removed before applying functions
}
\section{Computed variables}{


The names of the columns stay the same as in \code{data} (for the arguments "ws", "wd" and "z").
\itemize{
\item binned column \code{ws}
\item binned column \code{wd}
\item factor column \code{stat} containing the name of the summarize function as level
\item column \code{z} with the result of the summarize function
\item \code{n} count of occurrences for the corresponding bin
\item \code{freq} frequency of the corresponding bin
}
}

\examples{
fn <- rOstluft.data::f("Zch_Stampfenbachstrasse_2010-2014.csv")
data <- rOstluft::read_airmo_csv(fn)
data <- rOstluft::rolf_to_openair(data)
data <- dplyr::mutate(data, year = lubridate::year(date))

summary_wind(data, "ws", "wd", "NO2")

# works with symbols too and additional grouping
summary_wind(data, ws, wd, NO2, groups = c("site", "year"))

# multiple stats: Pass function, by name, reference, as function or one sided formula
q95 <- function(x) stats::quantile(x, probs = 0.95)

funs <- list(
  "mean",
  "median",
  "q95_1" = q95,
  "q95_2" = function(x) stats::quantile(x, probs = 0.95),
  "q95_3" = ~ stats::quantile(., probs = 0.95)
)

res <- summary_wind(data, "ws", "wd", "NO2", fun = funs)
res

# and q95, q95_1, q95_2, q95_3 alle have the same value
tidyr::spread(res, "stat", "NO2") \%>\%
  dplyr::select(q95_1, q95_2, q95_3)

# is for some reason fun.args used with multiple functions, use ... to catch
# superfluous arguments:
funs <- list(
  "q95" = function(x, ...) stats::quantile(x, probs = 0.95),
  "mean"
)
summary_wind(data, "ws", "wd", "NO2", fun = funs, fun.args = list(na.rm = TRUE))


# more wd classes, less ws classes and squish ws
summary_wind(data, "ws", "wd", "NO",
             wd_cutfun = cut_wd.fun(binwidth = 22.5),
             ws_cutfun = cut_ws.fun(binwidth = 2, ws_max = 6))

# only one ws class ()
summary_wind(data, "ws", "wd", "NO",
             ws_cutfun = function(x) factor("ws"))
}
