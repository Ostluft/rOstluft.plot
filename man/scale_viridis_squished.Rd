% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/viridis_squished.R
\name{scale_fill_viridis_squished}
\alias{scale_fill_viridis_squished}
\alias{scale_color_viridis_squished}
\alias{scale_fill_gradientn_squished}
\alias{scale_color_gradientn_squished}
\title{squish outliers or extreme values in scales}
\usage{
scale_fill_viridis_squished(limits, breaks, labels = waiver(), ...)

scale_color_viridis_squished(limits, breaks, labels = waiver(), ...)

scale_fill_gradientn_squished(limits, breaks, labels = waiver(), ...)

scale_color_gradientn_squished(limits, breaks, labels = waiver(), ...)
}
\arguments{
\item{limits}{for the scale}

\item{breaks}{A numeric vector of positions for breaks}

\item{labels}{One of:
\itemize{
\item \code{NULL} for no labels
\item \code{waiver()} for the default labels computed by the
transformation object. Adds leading ">" for last element
\item A character vector giving labels (must be same length as \code{breaks})
\item A function that takes the breaks as input and returns labels
as output. Adds leading ">" for last element
}}

\item{...}{Other arguments passed on to \code{ggplot2::scale_colour_viridis_c()} or \code{scale_fill_viridis_c()}}
}
\value{
scale
}
\description{
The scale only applies the limits to the determination of the color.
The underlying data isn't squish. All values outside the limit are
simple colored the same.
}
\examples{
library(ggplot2)

fn <- rOstluft.data::f("Zch_Stampfenbachstrasse_2010-2014.csv")

df <-
  rOstluft::read_airmo_csv(fn) \%>\%
  dplyr::filter(starttime < lubridate::ymd(20140101)) \%>\%
  rOstluft::rolf_to_openair()

# data with outliers / extreme values
ggyearday(df, time = "date", z = "PM10")

# simple squished scale
fill_scale <- scale_fill_viridis_squished(
  limits = c(0, 75),
  breaks = c(0, 25, 50, 75),
  direction = -1,
  na.value = NA,
  option = "A"
)
ggyearday(df, time = "date", z = "PM10", fill_scale = fill_scale) +
  facet_wrap(vars(year), scales = "free_x", ncol = 1)

# add unit to scale (or any other label formating function)
fill_scale <- scale_fill_viridis_squished(
  limits = c(0, 75),
  breaks = c(0, 25, 50, 75),
  labels = scales::unit_format(unit = "\u00b5g/m3"),
  direction = -1,
  na.value = NA,
  option = "A"
)
ggyearday(df, time = "date", z = "PM10", fill_scale = fill_scale)

# custom labels for breaks
fill_scale <- scale_fill_viridis_squished(
  limits = c(0, 75),
  breaks = c(0, 25, 50, 75),
  labels = c("A", "B", "C", "D"),
  direction = -1,
  na.value = NA,
  option = "A"
)
ggyearday(df, time = "date", z = "PM10", fill_scale = fill_scale)

# No labels for breaks
fill_scale <- scale_fill_viridis_squished(
  limits = c(0, 75),
  breaks = c(0, 25, 50, 75),
  labels = NULL,
  direction = -1,
  na.value = NA,
  option = "A"
)
ggyearday(df, time = "date", z = "PM10", fill_scale = fill_scale)

# simple squished jet gradientn scale
fill_scale <- scale_fill_gradientn_squished(
  limits = c(0, 75),
  breaks = c(0, 25, 50, 75),
  colors = matlab::jet.colors(20),
  na.value = NA
)
ggyearday(df, time = "date", z = "PM10", fill_scale = fill_scale)
}
