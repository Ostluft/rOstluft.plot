% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stat_summary_wind_2d.R
\name{stat_summary_wind_2d}
\alias{stat_summary_wind_2d}
\title{Summarise z values over binned wind data.}
\usage{
stat_summary_wind_2d(data = NULL, mapping = NULL, fun = "mean",
  fun.args = list(), nmin = 1, ws_max = NA, bins = 100,
  smooth = TRUE, k = 100, extrapolate = TRUE, dist = 0.1,
  groups = NULL, geom = "raster", ...)
}
\arguments{
\item{data}{The data to be displayed in this layer.
#' requires input data including at least three columns carrying information regarding:
\itemize{
\item wind direction (in Â°)
\item wind velocity
\item z-values (e.g. air pollutant concentration)
}}

\item{mapping}{ggplot2 mapping, e.g. aes(wd = wd, ws = ws, z = NOx); requires wd, ws, z}

\item{fun}{function or list of functions for summary.}

\item{fun.args}{a list of extra arguments to pass to fun.}

\item{nmin}{numeric, minimum number of values for fun, if n < nmin: NA is returned}

\item{ws_max}{numeric or NA, maximum wind velocity for binning: above ws_max, z is set NA}

\item{bins}{numeric, number of bins over the range of values if !groups %in% c("u", "v")}

\item{smooth}{TRUE/FALSE, applies if groups = c("u", "v"); should smoothing of summary results should be performed
using fit_gam_surface()?}

\item{k}{numeric, applies if smooth = TRUE; degree of smoothing in smooth term in fit_gam_surface()}

\item{extrapolate}{TRUE/FALSE, applies if smooth = TRUE; fit_gam_surface() returns extrapolated (predicted) values for u, v coordinates that otherwise would have have NA for summarised z
if extrapolate = TRUE, those values are returned (to a certain degree depending on the value of dist)}

\item{dist}{numeric, fraction of 1, applies if smooth = TRUE and extrapolate = TRUE; maximum distance to next coordinate-pair at which the result of
fit_gam_surface(z) should be returned}

\item{groups}{can be NULL, c("u", "v"), "wd_class", "ws_class", ...}

\item{geom}{The geometric object to use display the data (in this case: raster).}

\item{...}{other arguments passed on to layer(params = list(...)).}

\item{wd_offset}{numeric, offset for wind_direction (in degree) if groups == "wd_class"; bins are then calculated over (wd + wd_offset) %% 360}
}
\value{
ggplot2 layer

Aesthetics
\itemize{
\item wd: wind direction in degrees
\item ws: wind velocity
\item z: z values to be summarised
}

Computed variables
\itemize{
\item If groups = c("u", "v"): a tibble is returned, binned over u and v, with variables:
}
\itemize{
\item wd: wind direction corresponding to midpoint value of u and v
\item ws: wind velocity corresponding to midpoint value of u and v
\item wd_class: new bins over wd considering binwidth
\item ws_class: new bins over ws considering binwidth and ws_max
\item u: bins over u (from input wd and ws)
\item v: bins over v (from input wd and ws)
\item z: result from fun(z, ...)
}
\itemize{
\item If groups = NULL: groups = "wd". In this case, bins are calculated over wind direction;
a tibble including wd_class and summarised z is returned
\item groups can be strings for other varibables in data; then fun is applied over those;
a tibble including groups and summarised z is returned
}
}
\description{
Binning is done by StatWind, so input data to stat_summary_wind() should be original unbinned data.
Depending on the groups argument, binning is either done 2-dimensional over cartesian u and v wind vectors
(calculated from input data; then, stat_summary_wind() yields results similar to openair::polarplot())
or,
1-dimensional over wind direction or wind velocity bins, respectively.
}
