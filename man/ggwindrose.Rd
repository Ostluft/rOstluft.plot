% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ggwindrose.R
\name{ggwindrose}
\alias{ggwindrose}
\title{ggplot wrapper to create a windrose (polar wind-bin frequency plot)}
\usage{
ggwindrose(data, mapping, param_args = list(), ..., wd_binwidth = 45,
  ws_binwidth = 1, ws_max = NA, fill_scale = scale_fill_viridis_d(),
  reverse = TRUE, bg = NULL)
}
\arguments{
\item{data}{tibble containing wind speed, wind direction and/or air pollutant concentration data}

\item{mapping}{ggplot2 mapping, e.g. aes(wd = wd, ws = ws); requires wd, ws}

\item{param_args}{named list, passed on to \code{\link[ggplot2:layer]{ggplot2::layer()}} as argument params after combining with the other
arguments}

\item{...}{passed onto \code{\link[=stat_summary_wind]{stat_summary_wind()}}}

\item{wd_binwidth}{numeric, binwidth for wind direction in Â°, wd_binwidth should fullfill:
\code{(360 / wd_binwidth) \%in\% c(4, 8, 12, 16)}}

\item{ws_binwidth}{numeric, binwidth for wind speed}

\item{ws_max}{numeric, can be NA, wind speed is squished at this value}

\item{fill_scale}{ggplot2 discrete fill scale, e.g. \code{\link[ggplot2:scale_fill_gradientn]{ggplot2::scale_fill_gradientn()}}}

\item{reverse}{TRUE/FALSE, should wind speed bin factors be sorted descending or ascending (inside-out or reverse)?}

\item{bg}{raster map, e.g. ggmap object as plot background}
}
\value{
ggplot object

\code{\link[ggplot2:ggplot]{ggplot2::ggplot()}} object
}
\description{
ggplot wrapper to create a windrose (polar wind-bin frequency plot)
}
\examples{
library(ggplot2)

fn <- rOstluft.data::f("Zch_Stampfenbachstrasse_2010-2014.csv")

df <-
  rOstluft::read_airmo_csv(fn) \%>\%
  rOstluft::rolf_to_openair() \%>\%
  openair::cutData(date, type = "daylight")

ggwindrose(df, aes(ws = ws, wd = wd), wd_binwidth = 22.5,
           ws_binwidth = 0.5, ws_max = 5)

# don't like bar outlines?
ggwindrose(df, aes(ws = ws, wd = wd), wd_binwidth = 22.5, param_args = list(color = "black"),
           ws_binwidth = 0.5, ws_max = 4)

ggwindrose(df, aes(ws = ws, wd = wd), wd_binwidth = 22.5, param_args = list(color = NA),
           ws_binwidth = 0.5, ws_max = 4)

# facetting
ggwindrose(df, aes(ws = ws, wd = wd), wd_binwidth = 22.5, param_args = list(color = NA),
            ws_binwidth = 0.5, ws_max = 3) +
  facet_wrap(daylight~.)
}
