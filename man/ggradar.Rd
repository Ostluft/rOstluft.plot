% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ggradar.R
\name{ggradar}
\alias{ggradar}
\title{Summarise and ggplot data by wind direction bins}
\usage{
ggradar(data, mapping, ..., nmin = 3, fun = "mean",
  fun.args = list(na.rm = TRUE), ws_max = NA, wd_binwidth = 45,
  color_scale = scale_color_viridis_d(),
  fill_scale = scale_fill_viridis_d(alpha = 0.25), geom = "polygon",
  bg = NULL, wd_cutfun = NULL)
}
\arguments{
\item{data}{tibble containing wind speed, wind direction and air pollutant concentration data}

\item{mapping}{ggplot2 mapping, e.g. aes(wd = wd, ws = ws, z = NOx); requires wd, ws, z}

\item{nmin}{numeric, minimum number of data points to be averaged in one wind direction bin}

\item{fun}{character string, stat function to be applied at wind direction bins}

\item{fun.args}{list, arguments to fun}

\item{ws_max}{maximum wind speed cap; last wind speed bin contains all wind speeds > ws_max}

\item{wd_binwidth}{numeric, binwidth for wind direction, typically %in% c(45, 22.5)}

\item{color_scale}{ggplot2 color scale, e.g. scale_color_gradientn(...)}

\item{fill_scale}{ggplot2 fill scale, e.g. scale_fill_gradientn(...)}

\item{bg}{raster map, e.g. ggmap object as plot background}

\item{wd_cutfun}{NULL or a function with which wind direction is cut into bins; per default (wd_cutfun == NULL): function(wd) wd_classes(wd, wd_binwidth = wd_binwidth)}
}
\description{
Summarise and ggplot data by wind direction bins
}
\examples{
require(rOstluft)
require(rOstluft.data)
require(rOstluft.plot)
require(lubridate)
require(ggplot2)

df <-
  rOstluft::read_airmo_csv(system.file("extdata", "Zch_Stampfenbachstrasse_2010-2014.csv",package = "rOstluft.data", mustWork = TRUE)) \%>\%
  rOstluft::rolf_to_openair() \%>\%
  dplyr::mutate(wday = lubridate::wday(date, label = TRUE, week_start = 1))

ggradar(df, aes(wd = wd, ws = ws, z = NOx), fill = "blue", color = "blue", alpha = 0.5) + ylab("NOx")

q95 <- function(x, ...) quantile(x, 0.95, ...)
ggradar(df, aes(wd = wd, ws = ws, z = NOx, group = stat(stat), color = stat(stat)),
        fill = NA, fun = list("mean", "median", "perc95" = q95)) + ylab("NOx")

df \%>\%
  dplyr::select(wd, ws, NO, NOx, wday) \%>\%
  tidyr::gather(par, val, -wd, -ws, -wday) \%>\%
  ggradar(aes(wd = wd, ws = ws, z = val, group = par, fill = par, color = par)) + ylab("mean") +
  facet_wrap(wday~.)

# with background map
bbox <- tibble::tibble(x = c(2683141 - 500, 2683141 + 500), y = c(1249040 - 500, 1249040 + 500))
bbox <- rOstluft::transform_LV95_to_WSG84(bbox)
bbox <- c(left = bbox$lon[1], right = bbox$lon[2], bottom = bbox$lat[1], top = bbox$lat[2])

raster_map <- ggmap::get_stamenmap(bbox, zoom = 16, maptype = "terrain",
                                   source = "stamen", color = "bw")

ggradar(df, aes(wd = wd, ws = ws, z = NOx), fill = "blue", color = "blue", alpha = 0.2, bg = raster_map) +
  ylab("NOx") +
  theme( panel.grid.major = ggplot2::element_line(linetype = 1, color = "white"))

}
