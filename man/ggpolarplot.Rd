% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ggpolarplot.R
\name{ggpolarplot}
\alias{ggpolarplot}
\title{ggplot wrapper to create a wind-based polar plot}
\usage{
ggpolarplot(data, mapping, ..., nmin = 3, fun = "mean",
  fun.args = list(na.rm = TRUE), ws_max = NA, smooth = TRUE,
  k = 200, extrapolate = TRUE, dist = 0.1, pixels = 80^2,
  fill_scale = scale_fill_gradientn(colours = matlab::jet.colors(100),
  na.value = NA), ylabels = scales::unit_format(unit = "m/s"),
  breaks = waiver(), bg = NULL)
}
\arguments{
\item{data}{tibble containing wind speed, wind direction and air pollutant concentration data}

\item{mapping}{ggplot2 mapping, e.g. aes(wd = wd, ws = ws, z = NOx); requires wd, ws, z}

\item{nmin}{numeric, minimum number of data points to be averaged in one wind speed / wind direction bin}

\item{fun}{character string, stat function to be applied at wind speed / wind direction bins}

\item{fun.args}{list, arguments to fun}

\item{ws_max}{maximum wind speed considered for plotting}

\item{smooth}{TRUE/FALSE, should the result of stat_summary_wind_2d() be smoothed using fit_gam_surface() (with mgcv::bam())?}

\item{k}{numeric, smoothing parameter for formular smoothing term s(..., k = k) in mgcv::bam()}

\item{extrapolate}{TRUE/FALSE, should smoothed surfaced be extended further than bins with actual data? (if smooth == TRUE)}

\item{dist}{mnumeric < 1, maximum distance from bin at which extrapolation is done (if extrapolate == TRUE). dist is relative, i.e. 0.1 = 10% of total range}

\item{pixels}{number of bins at the 2-dimensional u, v wind component coordinate system}

\item{fill_scale}{ggplot2 fill scale, e.g. scale_fill_gradientn(...)}

\item{ylabels}{function to format ylabels. Default adds unit " m/s"}

\item{breaks}{waiver() or numeric vector, provides y-axis breaks}

\item{bg}{raster map, e.g. ggmap object as plot background}
}
\value{
ggplot object
}
\description{
Can mimic openair::polarplot(), i.e. wind direction - wind velocity heatmap,
including options for smoothing, flexible grid setting,
flexible stat functions, data extrapolation and plotting over a raster map.
}
\examples{
require(rOstluft)
require(rOstluft.data)
require(rOstluft.plot)
require(lubridate)
require(ggplot2)
require(dplyr)

df <-
  rOstluft::read_airmo_csv(system.file("extdata", "Zch_Stampfenbachstrasse_2010-2014.csv", package = "rOstluft.data", mustWork = TRUE)) \%>\%
  rOstluft::rolf_to_openair() \%>\%
  dplyr::mutate(wday = lubridate::wday(date, label = TRUE, week_start = 1))

# simple
ggpolarplot(df, aes(wd = wd, ws = ws, z = NOx))

# change smoothing degree, add custom breaks and change grid style
ggpolarplot(df, aes(wd = wd, ws = ws, z = NOx), k = 25, breaks = seq(2,10,2))  +
  theme(panel.grid.major = ggplot2::element_line(linetype = 2, size = 0.25, color = "gray90")) # ... linetype doesn't work yet

# no data extrapolation
ggpolarplot(df, aes(wd = wd, ws = ws, z = NOx), extrapolate = FALSE, breaks = seq(2,10,2))

# no smoothing
ggpolarplot(df, aes(wd = wd, ws = ws, z = NOx), smooth = FALSE, breaks = seq(2,10,2))

# cap maximum NOx concentration and wind velocity
ggpolarplot(df, aes(wd = wd, ws = ws, z = pmin(NOx, 40)), ws_max = 4, smooth = FALSE, breaks = 1:10)

# change binning parameters
ggpolarplot(df, aes(wd = wd, ws = ws, z = NOx), smooth = FALSE, pixels = 50^2, nmin = 10, breaks = seq(2,6,2))

# facetting
ggpolarplot(df, aes(wd = wd, ws = ws, z = pmin(NOx, 50)), ws_max = 4, pixels = 50^2, k = 25, breaks = 1:4) +
  facet_wrap(wday~., scales = "fixed")

# different stat fun
ggpolarplot(df, aes(wd = wd, ws = ws, z = NOx), fun = "quantile", fun.args = list(probs = 0.95, na.rm = TRUE), breaks = seq(2,10,2))

# facetting by stat
ggpolarplot(df, aes(wd = wd, ws = ws, z = NOx), fun = list("mean", "median"), ws_max = 4, pixels = 50^2, k = 25, breaks = seq(2,10,2)) +
  facet_wrap(stat~.) # => hm, warum funzt das nicht??


}
