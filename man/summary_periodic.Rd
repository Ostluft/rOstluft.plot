% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/summary_periodic.R
\name{summary_periodic}
\alias{summary_periodic}
\title{Summarise a \code{\link[rOstluft:format_rolf]{rOstluft::format_rolf()}} dataset over periodic (diurnal, weekday, etc) factors
implicitly created by \code{\link[=cut_timeseries_periodic]{cut_timeseries_periodic()}} using various stat functions.}
\usage{
summary_periodic(
  data,
  y = "value",
  groupings = grp("starttime_of_day"),
  fun = list("mean", "sd", "median", "mad", "percentile05", "percentile25",
    "percentile75", "percentile95"),
  fun.args = list(na.rm = TRUE),
  nmin = 3,
  coords = c(lat = 47.36667, lon = 8.55)
)
}
\arguments{
\item{data}{a data.frame or tibble containing the data}

\item{y}{a character string specifying the taget variable to be summarised, usually "value".}

\item{groupings}{additional groupings. Use helper \code{\link[=grp]{grp()}} to create; groupings must be from  possible
outcomes of \code{\link[rOstluft:cut_timeseries_periodic]{rOstluft::cut_timeseries_periodic()}}.}

\item{fun}{function or list of functions for summary, can be named (then the outut stat is named after the function's name);
Strings matching the regular expression \verb{/^percentile([0-9])\{1,2\}$/i} are converted into the respective function.
"percentile95" => \code{function(x, ...) quantile(x, 95 / 100, ...)}}

\item{fun.args}{a list of extra arguments passed on to fun.}

\item{nmin}{numeric, minimum number of values for fun, if n < nmin: NA is returned}

\item{coords}{a named vector of the location in  WGS84 coordinates for the daylight factoring.
\code{\link[suncalc:getSunlightTimes]{suncalc::getSunlightTimes()}} is used to calculate sunrise, sunset times.
Default: c(lat = 47.36667, lon = 8.55) => Zuerich, Switzerland}
}
\value{
a tibble with summarised data
}
\description{
Input data should be \code{\link[rOstluft:format_rolf]{rOstluft::format_rolf()}} data.
}
\section{Computed variables}{
 as determined by \code{\link[=cut_timeseries_periodic]{cut_timeseries_periodic()}} in combination with \code{grouping}

The names of the columns stay the same as in \code{data}.
\itemize{
\item factor columns according to the groups specified in \code{grouping}
\item factor column \code{stat} containing the name of the summarize function as level
\item column \code{value} with the result of the summarize function
\item \code{n} count of occurrences for the corresponding bin
\item \code{freq} frequency of the corresponding bin
}
}

\examples{
fn <- rOstluft.data::f("Zch_Stampfenbachstrasse_2010-2014.csv")

data <-
  rOstluft::read_airmo_csv(fn) \%>\%
  rOstluft::pluck_parameter("NOx", "O3", "PM10") \%>\%
  rOstluft::resample(new_interval = "h1")

fun <- list(middle = "mean", middle2 = "median", ymin = "percentile05",
           lower = "percentile25", upper = "percentile75", ymax = "percentile95")

data_summarized <- summary_periodic(data, fun = fun)
data_summarized
}
